
name: Build-Package Chef Cookbooks

on:
  push:
    tags:
      - '*'
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    
    - name: Install chef
      uses: actionshub/chef-install@main
        
    - name: Install cookbooks
      run: berks vendor

    - name: Create archive
      run: tar czf nomad_cookbook.tar.gz berks-cookbooks/nomad_cookbook

    - name: Publish artifact
      uses: actions/upload-artifact@master
      with:
          name: nomad_cookbook
          path: nomad_cookbook.tar.gz

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Tests
        run: echo "Tests"

      - name: Download state artifact
        uses: actions/download-artifact@v4
        with:
            name: nomad_cookbook

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: test
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:

    - name: Set tag name
      id: tag
      run: |
        if [[ "${{ github.event_name }}" != "push" ]]; then
          tag=v$(date +%Y%m%d.%H%M%S)
        else
          tag=$(basename "${{ github.ref }}")
        fi
        echo "tag=$tag" >> $GITHUB_OUTPUT

    - name: Create Release
      env:
        GH_TOKEN: ${{ github.token }}
        GH_REPO: ${{ github.repository }}
      run: |
        tag="${{ steps.tag.outputs.tag }}"
        body="ruby/ruby@${{ needs.prepare.outputs.commit }}"
        gh release create --draft "$tag" --title "$tag" --notes "$body"

  publish:
    name: Publish Release
    needs: [release, build]
    runs-on: ubuntu-latest
    steps:
    - name: Download state artifact
      uses: actions/download-artifact@v4
      with:
          name: nomad_cookbook
    - name: Upload Built Artifact
      env:
        GH_TOKEN: ${{ github.token }}
        GH_REPO: ${{ github.repository }}
      run: gh release upload "${{ needs.release.outputs.tag }}" "nomad_cookbook.tar.gz"
    - name: Publish Release
      env:
        GH_TOKEN: ${{ github.token }}
        GH_REPO: ${{ github.repository }}
      run: gh release edit "${{ needs.release.outputs.tag }}" --draft=false
    - uses: eregon/keep-last-n-releases@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        n: 3
        remove_tags_without_release: true
